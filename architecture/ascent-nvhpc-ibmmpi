#=====================================================================
# Acceleration = 1: enable GPU acceleration
# Acceleration = 0: otherwise
#=====================================================================
Acceleration = 0
COMPILER_MODULE = nvhpc/21.3
MODULES = hdf5 essl fftw

#=====================================================================
# Library paths and elements, e.g.,
#    LIBXC_PATH  = /opt/packages/LibXC/libxc-4.3.4/INTEL
#    ACCEL_PATH  = /usr/local/cuda
#    FFTW_PATH   = /usr/local/FFTW/fftw-3.3.8/INTEL
#    P3DFFT_PATH = /opt/packages/P3DFFT/p3dfft-2.7.9/INTEL
#    LUA_PATH    = /opt/packages/Lua/lua-5.3.5
#  
# If LUA_PATH, LIBXC_PATH, FFTW_PATH, and/or P3DFFT_PATH are empty, the
# corresponding packages will be installed under $(EXTERN_LIB_PATH)
#=====================================================================
HDF5_PATH   = $(OLCF_HDF5_ROOT)
ACCEL       = CUDA
ACCEL_PATH  = $(OLCF_CUDA_ROOT)
# LIBXC_PATH  = /gpfs/alpine/proj-shared/mat020/libxc-5.0.0/GNU
LIBXC_PATH  = 
FFTW_PATH   = $(OLCF_FFTW_ROOT)
# P3DFFT_PATH = /gpfs/alpine/proj-shared/mat020/p3dfft-2.7.9/GNU
P3DFFT_PATH = 
LUA_PATH    =
LIBS       += -lessl -llapack -lblas -L${OLCF_ESSL_ROOT}/lib64 -L$(OLCF_CUDA_ROOT)/lib64 -lcudart -lcuda -lcublas
ADD_LIBS   += -lm -lstdc++ -pgf90libs

ADD_LIBS   += -L$(LIBXC_PATH)/lib -lxcf90 -lxc
Use_LibXC   = -DLIBXC5 -I$(LIBXC_PATH)/include

#=====================================================================
# Compiler tools, gnu version 7.0 seems requiried by lsms.
#=====================================================================
CC          = mpicc
CXX         = mpicxx
F77         = mpif90
FC          = mpif90
MPICC       = mpicc
ACCEL_CXX   = nvcc -arch=sm_60
ARCHV       = ar -r

#=====================================================================
# Preprocessor/Compiler/Linker flags, e.g.,
#    FFLAGS = -I. -O3 -CB -CU -traceback -ftrapuv -fpe0 -ftz -fp-stack-check
# Note: "FPPFLAGS = -DMPI" enables MPI parallel processing.
#=====================================================================
FPPDEFS     = -cpp
CPPDEFS     = -cpp
# FPPFLAGS    = -DMPI -DMaxOutProcs=1 -DUSE_SCALAPACK $(Use_LibXC)
FPPFLAGS    = -DMPI -DMaxOutProcs=1 $(Use_LibXC) -DNVHPC
CPPFLAGS    = 

CFLAGS      = -O3
CXXFLAGS    = -O3 -std=c++14
OPT_OPENMP  = -fopenmp -mp=gpu -Minfo=mp,accel
# FFLAGS      = -O3 -Mbounds -traceback -Mchkptr -Mchkstk
FFLAGS      = -O3 $(OPT_OPENMP)
F77FLAGS    = -O3 $(OPT_OPENMP)

LD_FLAGS    =
LD          = $(FC) $(LD_FLAGS)

#=====================================================================
# On IBM Systems with ESSL we need a workaround for missing LAPACK functions
#=====================================================================
export ESSL_WORKAROUND=1
export MPIFH=ibm_mpifh

#=====================================================================
# LIBXC_CONFIG_FLAGS, P3DFFT_CONFIG_FLAGS and FFTW_CONFIG_FLAGS are 
# ./configure flags for libxc, p3dfft, and fftw package, respectively.
# Note: for hdf5, "--enable-parallel" might be needed in the future.
#=====================================================================
HDF5_CONFIG_FLAGS   = --enable-fortran --enable-static-exec CC=$(CC) CXX=$(CXX) FC=$(FC)
LIBXC_CONFIG_FLAGS  = CC=$(CC) CFLAGS="$(CFLAGS)" FC=$(FC) FFLAGS="$(FFLAGS)" LIBS=""
P3DFFT_CONFIG_FLAGS = --enable-pgi --enable-openmpi --enable-estimate FC=$(FC) CC=$(CC) LIBS="$(LIBS)" CCLD=$(FC) LIBS=""
FFTW_CONFIG_FLAGS   = --enable-mpi --enable-openmp --enable-threads CC=$(CC) CFLAGS="$(CFLAGS)" MPICC=$(MPICC) F77=$(F77) FFLAGS="$(FFLAGS)"
