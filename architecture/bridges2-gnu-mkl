# > module swap intel-oneapi/2023.2.1 openmpi/4.0.5-gcc10.2.0
# > module load intel-mkl/2023.2.0
#
# Currently Loaded Modules:
#   1) gcc/10.2.0     3) cuda/11.7.1               5) intel-tbb/2021.10.0          7) intel-mkl/2023.2.0
#   2) python/3.8.6   4) openmpi/4.0.5-gcc10.2.0   6) intel-compiler-rt/2023.2.1
#=====================================================================
# Acceleration = 1: enable GPU acceleration
# Acceleration = 0: otherwise
#=====================================================================
Acceleration = 0

#=====================================================================
# Library paths and elements, e.g.,
#    HDF5_PATH   = /opt/packages/HDF5/hdf5-1.10.5/PGI
#    LIBXC_PATH  = /opt/packages/LibXC/libxc-4.3.4/PGI
#    ACCEL_PATH  = /usr/local/cuda
#    FFTW_PATH   = /usr/local/FFTW/fftw-3.3.8/PGI
#    P3DFFT_PATH = /opt/packages/P3DFFT/p3dfft-2.7.9/PGI
#    LUA_PATH    = /opt/packages/Lua/lua-5.3.5/PGI
#  
# If LUA_PATH, LIBXC_PATH, FFTW_PATH, and/or P3DFFT_PATH are empty, the
# corresponding packages will be installed under $(EXTERN_LIB_PATH)
#=====================================================================
MATH_PATH   = $(MKLROOT)/lib/intel64
HDF5_PATH   = 
ACCEL       = CUDA
ACCEL_PATH  =
LIBXC_PATH  =
FFTW_PATH   =
P3DFFT_PATH =
LUA_PATH    =
LIBS       += -L$(MATH_PATH) -lmkl_scalapack_lp64 \
-Wl,--start-group -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lmkl_blacs_openmpi_lp64 -Wl,--end-group -lpthread -lm -ldl
# -Wl,--start-group -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lmkl_blacs_openmpi_lp64 -Wl,--end-group -lintlc -lsvml -lifcore -limf \
# -liomp5 -lpthread -lm -ldl
ADD_LIBS   += -lgfortran

#=====================================================================
# Compiler tools
#=====================================================================
CC          = mpicc
CXX         = mpicxx
F77         = mpifort
FC          = mpifort
MPICC       = mpicc
ACCEL_CXX   = nvcc -arch=sm_52
ARCHV       = ar -r

#=====================================================================
# Preprocessor/Compiler/Linker flags, e.g.,
#    FFLAGS = -I. -O3 -CB -CU -traceback -ftrapuv -fpe0 -ftz -fp-stack-check
# Note: "FPPFLAGS = -DMPI" enables MPI parallel processing.
# Unfortunately, rpc on b2t02 is not properly installed.
#     Specifically, gssrpc_xdr_double is missing from libgssrpc.so
#     I have to disable using XDR format.
#=====================================================================
FPPDEFS     = -cpp
CPPDEFS     = -cpp
FPPFLAGS    = -DMPI -DMaxOutProcs=1 -DUSE_SCALAPACK

CFLAGS      = -O3
CXXFLAGS    = -O3 -std=c++14
# FFLAGS      = -O3 -fcheck=all -w -fallow-argument-mismatch
# F77FLAGS    = -O3 -fcheck=all -w -fallow-argument-mismatch
FFLAGS      = -O3 -fcheck=all -w -fallow-argument-mismatch
F77FLAGS    = -O3 -fcheck=all -w -fallow-argument-mismatch
OPT_OPENMP  = -fopenmp

LD_FLAGS    =
LD          = $(FC) $(LD_FLAGS)

#=====================================================================
# LIBXC_CONFIG_FLAGS, P3DFFT_CONFIG_FLAGS and FFTW_CONFIG_FLAGS are 
# ./configure flags for hdf5, libxc, p3dfft, and fftw package, respectively.
# Note: for hdf5, "--enable-parallel" might be needed in the future.
#=====================================================================
HDF5_CONFIG_FLAGS   = --enable-fortran --enable-static-exec CC=$(CC) CXX=$(CXX) FC=$(FC)
LIBXC_CONFIG_FLAGS  = CC=$(CC) CFLAGS="$(CFLAGS)" FC=$(FC) FFLAGS="$(FFLAGS)"
P3DFFT_CONFIG_FLAGS = FC=$(FC) CC=$(CC) FCFLAGS="$(FFLAGS)" --enable-openmpi
FFTW_CONFIG_FLAGS   = --enable-mpi --enable-openmp --enable-threads CC=$(CC) CFLAGS="$(CFLAGS)" MPICC=$(MPICC) F77=$(F77) FFLAGS="$(FFLAGS)"
